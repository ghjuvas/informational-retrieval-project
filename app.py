'''
User interface of the search app.
'''
import time
import streamlit as st
import manage_app
from data import MODELS

st.set_page_config(layout="wide")

# info
title_cols = st.columns([1, 1.8, 1])
title_cols[1].title('üíì–ü–æ–∏—Å–∫–æ–≤–∏–∫ –ø—Ä–æ –ª—é–±–æ–≤—åüíì')
info_cols = st.columns([1, 2.2, 1])
info_cols[1].write('–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –¥–µ–ª–∞–º–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏!')

# choice
st.header('–ü–æ–∏—Å–∫')

method_col, query_col = st.columns([1, 3])
method = method_col.selectbox(label='–ú–µ—Ç–æ–¥', options=['TF-IDF', 'Okapi BM25', 'BERT'])
query = query_col.text_input(label='–í–∞—à –∑–∞–ø—Ä–æ—Å', key='query')

search_cols = st.columns([1, 0.1, 1])
search_button = search_cols[1].button(label='–ü–æ–∏—Å–∫')

# search
if search_button:
    placeholder = st.empty()
    start_time = time.time()
    df = manage_app.main(method, query, MODELS)
    work_time = round((time.time() - start_time), 3)
    if isinstance(df, str) and df == '':
        placeholder.error('–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å!', icon='üö®')
    else:
        placeholder.dataframe(df, use_container_width=True)
        time_placeholder = st.empty()
        time_placeholder.info(f'–ü–æ–∏—Å–∫ –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –∑–∞ {work_time} —Å–µ–∫—É–Ω–¥', icon='‚åõ')

else:
    st.info(
        '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–¥–µ–∫—Å (BM25 –∏–ª–∏ BERT), –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞',
        icon='‚ÑπÔ∏è'
    )
